- defaults:
    stdin: false
    link:
      create: true

- clean: ['~']

# - - - - - - - - - - - - - - - - - - - -
# SSH
# - - - - - - - - - - - - - - - - - - - -

- create:
    ~/.ssh:
      mode: 0700
    ~/src:
- shell:
    - touch ~/.ssh/known_hosts
    - [
        ssh-keyscan -H github.com >> ~/.ssh/known_hosts,
        adding github to known hosts,
      ]
    - description: generate ssh key if not exists
      command: >
        [ -f "$HOME/.ssh/id_rsa" ] ||
        ssh-keygen -f "$HOME/.ssh/id_rsa" -qt rsa -b 4096 -N ""
        -C $(git config --global --get user.email)

# - - - - - - - - - - - - - - - - - - - -
# Terminal
# - - - - - - - - - - - - - - - - - - - -

- git:
    '~/.zinit/bin':
      url: 'https://github.com/zdharma/zinit.git'
      method: clone

- link:
    ~/.zshenv: zsh/env
    ~/.zshrc: zsh/rc

    # Git:
    ~/:
      glob: true
      path: git/*
      prefix: '.git'

    # Tools:
    # ~/.config/iterm-settings: config/iterm-settings

# - - - - - - - - - - - - - - - - - - - -
# Homebrew
# - - - - - - - - - - - - - - - - - - - -

- link:
    ~/.config/brewfile/Brewfile: Brewfile

- shell:
    - description: install homebrew
      command: >
        if [[ $(command -v brew) == "" ]]; then
          echo | /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)";
        fi
      stdout: true
      stdin: true

- brewfile:
    file: Brewfile
    stdout: true
    stderr: true
    include: ['tap', 'brew', 'cask', 'mas']

# - - - - - - - - - - - - - - - - - - - -
# Languages
# - - - - - - - - - - - - - - - - - - - -

- asdf:
    - plugin: nodejs
      url: https://github.com/asdf-vm/asdf-nodejs.git
      global: lts
      versions:
        - lts
        - latest
    - plugin: yarn
      url: https://github.com/twuni/asdf-yarn
      global: latest
      versions: [latest]
    - plugin: ruby
      url: https://github.com/asdf-vm/asdf-ruby.git
      global: latest
      versions: [latest]

- shell:
    - [touch ~/.hushlogin] # supress last login info
    - [sudo chsh -s $(which zsh) $(whoami), Making zsh the default shell]
    - [git submodule update --init --recursive, Installing submodules]
